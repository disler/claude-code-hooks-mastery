{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(uv:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(npm:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Write",
      "Edit",
      "Bash(chmod:*)",
      "Bash(touch:*)"
    ],
    "deny": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/pre_tool_use.py"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type PreToolUse --summarize"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/post_tool_use.py"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type PostToolUse --summarize"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/notification.py"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type Notification --summarize"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/stop.py --chat"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type Stop --add-chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/subagent_stop.py"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type SubagentStop"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type PreCompact"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/user_prompt_submit.py --log-only"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/send_event.py --source-app CC-Hooks --event-type UserPromptSubmit --summarize"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/user_prompt_submit.py --log-only"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/pre_compact.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/session_start.py"
          }
        ]
      }
    ]
  },
  "tts_settings": {
    "enabled": true,
    "default_voice_id": "6sFKzaJr574YWVu4UuJF",
    "word_count_threshold": 5,
    "max_word_count": 100,
    "excluded_tools": ["Read", "Grep", "LS", "TodoRead", "Glob", "Task"],
    "enable_response_tts": true,
    "response_tts": {
      "min_word_count": 3,
      "max_word_count": 150,
      "response_delay": 1.0,
      "filter_tool_responses": true,
      "filter_code_blocks": true,
      "filter_file_paths": true
    },
    "filter_settings": {
      "bash": {
        "speak_success": true,
        "speak_errors": true
      },
      "git": {
        "speak_success": true,
        "speak_errors": true
      },
      "file_operation": {
        "speak_write_operations": true,
        "speak_read_operations": false
      },
      "search": {
        "speak_search_results": false,
        "speak_errors": true
      }
    }
  }
}